name: Build and Upload Release

on:
  push:
    branches:
      - master

permissions:
  contents: write # Required permissions for the release action

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Checkout the repository code
      - name: Checkout code
        uses: actions/checkout@v3

      # Set up Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "16"

      - name: Install dependencies
        run: npm install

      # Check if the version has changed
      - name: Check version change
        id: version_check
        run: |
          current_version=$(jq -r .version package.json)
          previous_version=$(git show HEAD~1:package.json | jq -r .version)

          echo "Current version: $current_version"
          echo "Previous version: $previous_version"

          if [ "$current_version" != "$previous_version" ]; then
            echo "::set-output name=version_changed::true"
            echo "::set-output name=current_version::$current_version"
          else
            echo "::set-output name=version_changed::false"
          fi

      # Build the files into the dist directory
      - name: Build Files
        if: steps.version_check.outputs.version_changed == 'true'
        run: npm run build # Ensure this outputs files to the `dist` directory

      # Create the ZIP file for the built code using build:zip
      - name: Create Built Extension ZIP
        if: steps.version_check.outputs.version_changed == 'true'
        run: |
          npm run build:zip

      # Create ZIP file for the current source code
      - name: Create Source Code ZIP
        run: |
          zip -r kys-${{ steps.version_check.outputs.current_version }}-source.zip . -x "*.git*"

      - name: Publish Release
        uses: ncipollo/release-action@v1
        with:
          files: |
            dist/web-ext-artifacts/kys-${{ steps.version_check.outputs.current_version }}.zip
            dist/kys-${{ steps.version_check.outputs.current_version }}-source.zip
          token: ${{ secrets.GITHUB_TOKEN }}
          tag: v${{ steps.version_check.outputs.current_version }}
          name: Release v${{ steps.version_check.outputs.current_version }}
          body: "Automated release for version v${{ steps.version_check.outputs.current_version }}."
